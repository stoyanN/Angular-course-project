{"version":3,"sources":["webpack:///src/app/user-profile/user-profile.component.html","webpack:///src/app/user-profile/user-profile.component.ts","webpack:///src/app/register/register.component.html","webpack:///src/app/register/register.component.ts","webpack:///src/app/about/about.component.ts","webpack:///src/app/about/about.component.html","webpack:///src/app/core/header/header.component.html","webpack:///src/app/core/header/header.component.ts","webpack:///src/environments/environment.ts","webpack:///src/app/article/article.component.html","webpack:///src/app/article/article.component.ts","webpack:///src/app/core/footer/footer.component.ts","webpack:///src/app/core/footer/footer.component.html","webpack:///src/app/homepage/homepage.component.ts","webpack:///src/app/homepage/homepage.component.html","webpack:///src/app/services/media.service.ts","webpack:///src/app/admin-panel/admin-panel.component.html","webpack:///src/app/admin-panel/admin-panel.component.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/guards/admin.guard.ts","webpack:///src/app/guards/auth.guard.ts","webpack:///src/app/app.module.ts","webpack:///src/app/create-article/create-article.component.html","webpack:///src/app/create-article/create-article.component.ts","webpack:///src/app/not-found/not-found.component.ts","webpack:///src/app/not-found/not-found.component.html","webpack:///src/app/edit-article/edit-article.component.html","webpack:///src/app/edit-article/edit-article.component.ts","webpack:///src/app/services/user.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/article-details/article-details.component.html","webpack:///src/app/article-details/article-details.component.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["UserProfileComponent","media","service","articles","isLoaded","userId","localStorage","getItem","userRecords","console","log","f","deleteRecord","selector","templateUrl","styleUrls","RegisterComponent","fb","router","form","createFormGroup","email","required","password","minLength","rePassword","valid","value","registerUser","loginUser","navigate","get","register","AboutComponent","route","records","isVertical","imgSrc","description","HeaderComponent","isAdmin","userName","userCheck","logoutUser","Object","getUser","user","assign","role","environment","production","backendless","APP_ID","API_KEY","ArticleComponent","getAllRecords","subscribe","result","FooterComponent","HomepageComponent","MediaService","imgFile","formData","FormData","append","fetch","method","body","then","response","json","secure_url","collection","recordId","Backendless","Data","of","remove","objectId","data","save","queryBuilder","DataQueryBuilder","create","setWhereClause","find","findById","providedIn","AdminPanelComponent","AppComponent","AdminGuard","state","AuthGuard","isAuth","initApp","AppModule","declarations","imports","providers","bootstrap","CreateArticleComponent","isInvalid","event","target","files","uploadImage","imageData","orientation","title","saveRecord","imageUrl","likesList","JSON","stringify","alert","createStory","registerPhoto","NotFoundComponent","EditArticleComponent","recId","snapshot","params","id","getSingleRecord","recordTest","editFormGroup","group","shallowCopy","UserService","getCurrentUser","clear","logout","login","x","setItem","err","message","Error","User","routes","path","pathMatch","redirectTo","component","canActivate","canActivateChild","AppRoutingModule","forRoot","exports","LoginComponent","resetForm","ArticleDetailsComponent","isLiked","likes","postsEventHandler","rt","recData","isAuthor","ownerId","parse","indexOf","addUpdateListener","updatedValue","error","e","removeUpdateListener","isSure","window","confirm","push","elemIndex","splice","bootstrapModule","webpackEmptyAsyncContext","req","Promise","resolve","code","keys","module"],"mappings":"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","file":"main-es5.js","sourcesContent":["<app-header></app-header>\n\n<div *ngIf=\"isLoaded\" class=\"admin-panel\">\n    <h2 *ngIf=\"articles.length === 0\">There are no records</h2>\n    <table *ngIf=\"articles.length !== 0\">\n        <thead>\n            <tr>\n                <th>UserId</th>\n                <th>Article Name</th>\n                <th>Action</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr *ngFor=\"let a of articles\">\n                <td>\n                    {{a.ownerId}}\n                </td>\n                <td>{{a.title}}</td>\n                <td>\n                    <a class=\"buttons\" routerLink=\"/edit/{{a.objectId}}\">Edit</a>\n                    <a class=\"buttons\" (click)=\"delete(a.objectId)\">Delete</a>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n</div>\n\n<div *ngIf=\"!isLoaded\" class=\"admin-panel\">\n    <h2>Loading...</h2>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { MediaService } from '../services/media.service';\nimport { UserService } from '../services/user.service';\n\n@Component({\n  selector: 'app-user-profile',\n  templateUrl: './user-profile.component.html',\n  styleUrls: ['./user-profile.component.css']\n})\nexport class UserProfileComponent implements OnInit {\n\n  articles: any[] = [];\n  isLoaded: boolean = false;\n  userId!: string | null;\n\n  constructor(private media: MediaService, private service: UserService) { }\n\n  async ngOnInit(): Promise<void> {\n    try {\n      this.userId = localStorage.getItem('userId');\n      this.articles = await this.media.userRecords(`${this.userId}`, 'posts');\n      this.isLoaded = true;\n    } catch {\n      console.log(\"Error during loading!\");\n    }\n  }\n\n\n  async delete(f: number) {\n    try {\n      await this.media.deleteRecord('posts', f);\n      this.articles = await this.media.userRecords(`${this.userId}`, 'posts');\n    } catch {\n      console.log(\"Error during deleting!\");\n    }\n  }\n}\n","<app-header></app-header>\n<div class=\"register-container\">\n    <div class=\"site-register\">\n        <form [formGroup]=\"form\" (ngSubmit)=\"register()\">\n            <fieldset>\n                <legend>Register</legend>\n                <div class=\"email\">\n                    <label for=\"email\">Email:</label>\n                    <br>\n                    <input type=\"email\" id=\"email\" formControlName=\"email\" placeholder=\"Example: ryan@abc.bg\">\n                </div>\n                <div class=\"error\" *ngIf=\"email?.touched && email?.errors\">The email you entered is invalid</div>\n                <div class=\"password\">\n                    <label for=\"u-password\">Password</label>\n                    <br>\n                    <input type=\"password\" id=\"u-password\" formControlName=\"password\">\n                </div>\n                <div class=\"error\" *ngIf=\"password?.touched && password?.errors\">The password must be minimum 3\n                    characters!</div>\n                <div class=\"password\">\n                    <label for=\"rep-u-password\">Repeat Password</label>\n                    <br>\n                    <input type=\"password\" id=\"rep-u-password\" formControlName=\"rePassword\">\n                </div>\n                <div class=\"error\"\n                    *ngIf=\"rePassword?.touched && rePassword?.value !== password?.value\">\n                    Passwords don't match!</div>\n                <div class=\"submit field\">\n                    <button class=\"btn-submit\" [disabled]=\"form.invalid || (rePassword?.value !== password?.value)\">Register</button>\n                </div>\n            </fieldset>\n        </form>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, NgForm, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserService } from '../services/user.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  form!: FormGroup;\n\n  constructor(private fb: FormBuilder, private router: Router, private service: UserService) {\n    this.form = this.createFormGroup();\n  }\n\n  ngOnInit(): void {\n  }\n\n  createFormGroup() {\n    return new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required, Validators.minLength(3)]),\n      rePassword: new FormControl('', [Validators.required])\n    });\n  }\n\n  get email() {\n    return this.form.get('email');\n  }\n\n  get password() {\n    return this.form.get('password');\n  }\n\n  get rePassword() {\n    return this.form.get('rePassword');\n  }\n\n  async register() {\n    try {\n\n      if (this.form.valid) {\n        let { email, password, rePassword } = this.form.value;\n\n        await this.service.registerUser(email, password);\n        await this.service.loginUser(email, password);\n        await this.router.navigate(['/about']);\n      }\n    } catch {\n      console.log('Registration error!');\n    }\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AboutInterface } from './about-interface';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n  records: AboutInterface[] = [\n    {\n      isVertical: true,\n      imgSrc: 'https://res.cloudinary.com/dronicn8f/image/upload/v1607851732/sleeping-min_bfibdi.jpg',\n      description: 'This is me only 30 days old sleeping on my humans bed. This was one of my favourite activities to do and guess what...it is still a favourite thing to do.'\n    },\n    {\n      isVertical: true,\n      imgSrc: 'https://res.cloudinary.com/dronicn8f/image/upload/v1607851730/baby-min_rxbwjg.jpg',\n      description: 'On this picture I am a little older than the first one. As you see I learned fast how to pose infront of the camera. I look so fluffy &hearts; .'\n    },\n    {\n      isVertical: true,\n      imgSrc: 'https://res.cloudinary.com/dronicn8f/image/upload/v1607851731/playing-min_bjhm0a.jpg',\n      description: 'Here we are me and my best friend - The Angry Chicken. We used to love playing together. Every time when he was trying to run away from me I was there to catch him. Unfortunately one day The Angry Chicken went to visit a human friend and never came back.'\n    },\n    {\n      isVertical: false,\n      imgSrc: 'https://res.cloudinary.com/dronicn8f/image/upload/v1607851733/christmas-min_qlne5q.jpg',\n      description: 'My humans realised that I look so handsome infront of the camera... so they took me to some guy with very big photo camera. He was taking picture of us for an hour... it was very exhausting.'\n    },\n    {\n      isVertical: true,\n      imgSrc: 'https://res.cloudinary.com/dronicn8f/image/upload/v1607851729/1st-of-march-min_kc6aow.jpg',\n      description: \"This picture is taken at 1<sup>st</sup> of March. I didn't know it is a traditional bulgarian holiday. My humans gave me this thing Martenichka. It is made of white and red wool and you have to wear it until you see a stork. It is a little strange but as long as we do this for good health I am in.\"\n    },\n    {\n      isVertical: true,\n      imgSrc: 'https://res.cloudinary.com/dronicn8f/image/upload/v1607851731/caffee-on-the-beach-min_t4l8sq.jpg',\n      description: 'Oooh this is a favourite memory of mine. As I said at first &hearts; I LOVE THE BEACH &hearts; !!! I love when my humans take me there. While they are drinking this strange soup called coffe I am digging and searching for treasures.'\n    },\n    {\n      isVertical: true,\n      imgSrc: 'https://res.cloudinary.com/dronicn8f/image/upload/v1607851733/watching-the-see-min_ugr6td.jpg',\n      description: \"On this picture you can see the long road in the sea. I don't like going on this road because it looks so scary but it is nice to stand on the beach looking at it... dreaming about good food and cold beer!\"\n    }\n  ];\n\n  constructor(private route: Router) { }\n\n  ngOnInit(): void {\n  }\n\n\n\n}\n","<app-header></app-header>\n<div class=\"about-container\">\n    <div class=\"about-title\">\n        <h2>\n            Story of my life\n        </h2>\n    </div>\n    <div class=\"gallery\">\n        <div *ngFor=\"let rec of records\" class=\"item\">\n            <div class=\"media\" [class.vertical]=\"rec.isVertical\">\n                <img [src]=\"rec.imgSrc\" alt=\"\">\n            </div>\n            <p>\n                {{rec.description}}\n            </p>\n        </div>\n    </div>\n</div>","<header class=\"site-header\">\n    <div class=\"header-nav\">\n        <div class=\"header-logo\">\n            <a routerLink=\"/home\">Ryan's life</a>\n        </div>\n        <a *ngIf=\"userName\" routerLink=\"/user-profile\">Welcome {{userName}}!</a>\n        <div class=\"hamburger\">\n            <label for=\"ham-check\" hidden><i class=\"fas fa-bars\"></i></label>\n            <input type=\"checkbox\" id=\"ham-check\" hidden>\n            <div class=\"header-menu\">\n                <ul *ngIf=\"userName\">\n                    <li *ngIf=\"isAdmin\">\n                        <a routerLink=\"/admin\">Admin Panel</a>\n                    </li>\n                    <li>\n                        <a routerLink=\"/about\">My moments</a>\n                    </li>\n                    <li>\n                        <a routerLink=\"/articles\">Your Stories</a>\n                    </li>\n                    <li>\n                        <a routerLink=\"/create\">Share a memory</a>\n                    </li>\n                    <li>\n                        <a (click)=\"logout()\" id=\"logout\">Logout</a>\n                    </li>\n                </ul>\n                <ul *ngIf=\"!userName\">\n                    <li>\n                        <a routerLink=\"/login\">Login</a>\n                    </li>\n                    <li>\n                        <a routerLink=\"/register\">Register</a>\n                    </li>\n                </ul>\n            </div>\n        </div>\n\n    </div>\n</header>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { UserService } from 'src/app/services/user.service';\nimport { Admin } from 'src/app/models/admin';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\n\nexport class HeaderComponent implements OnInit {\n  userName: any;\n  user!: Admin;\n  isAdmin: boolean = false;\n\n  constructor(private service: UserService, private router: Router, private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.userName = localStorage.getItem('email');\n    this.userCheck();\n  }\n\n\n  async logout() {\n    try {\n      await this.service.logoutUser();\n      this.router.navigate(['home']);\n    } catch {\n      console.log(\"Logout error!\");\n    }\n  }\n\n  async userCheck() {\n    try {\n      this.user = Object.assign(await this.service.getUser());\n\n      if (this.user && (this.user.role === \"admin\")) {\n        this.isAdmin = true;\n      } else {\n        this.isAdmin = false;\n      }\n    } catch {\n      console.log(\"Admin localisation error!\");\n    }\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  backendless: {\n    APP_ID: 'A2EE51E2-94DD-0CD0-FFA8-C98E74943B00',\n    API_KEY: '61EF6831-9872-4168-8377-45EDA2927462'\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<app-header></app-header>\n\n<div class=\"loader site-articles\" *ngIf=\"!isLoaded\">\n    <h1>Loading...</h1>\n</div>\n<div *ngIf=\"userRecords\" class=\"site-articles\">\n    <div *ngFor=\"let record of userRecords\" class=\"single-article\">\n        <div class=\"picture-{{record.orientation}}\">\n            <img src=\"{{record.imageUrl}}\" alt=\"{{record.title}}\">\n        </div>\n        <h2>\n            {{record.title}}\n        </h2>\n        <a routerLink=\"{{record.objectId}}\">View story</a>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { from } from 'rxjs';\nimport { MediaService } from '../services/media.service';\nimport { UserService } from '../services/user.service';\n\n@Component({\n  selector: 'app-article',\n  templateUrl: './article.component.html',\n  styleUrls: ['./article.component.css']\n})\nexport class ArticleComponent implements OnInit {\n  userRecords: any[] = [];\n  isLoaded: boolean = false;\n\n  constructor(private service: UserService, private media: MediaService) { }\n\n  async ngOnInit(): Promise<void> {\n    this.isLoaded = true;\n\n    from(this.media.getAllRecords(\"posts\")).subscribe(result => this.userRecords = result);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer class=\"site-footer \">\n    <div class=\"footer-nav \">\n        <!-- <div class=\"footer-content \"> -->\n            <!-- <ul>\n                <li><a routerLink=\"/create\">Share A Story</a></li>\n            </ul> -->\n        <!-- </div> -->\n        <div class=\"footer-icons \">\n            <ul>\n                <li><a href=\"https://www.facebook.com \" class=\"f-book \"><i class=\"fab fa-facebook-square \"></i></a></li>\n                <li><a href=\"https://www.instagram.com \" class=\"instagram \"><i class=\"fab fa-instagram \"></i></a></li>\n                <li><a href=\"https://twitter.com \" class=\"twitter \"><i class=\"fab fa-twitter-square \"></i></a></li>\n            </ul>\n        </div>\n        <div class=\"footer-more \">\n            <p>All rights reserved &copy; 2020</p>\n        </div>\n    </div>\n</footer>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-homepage',\n  templateUrl: './homepage.component.html',\n  styleUrls: ['./homepage.component.css']\n})\nexport class HomepageComponent implements OnInit {\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  \n\n}\n","<app-header></app-header>\n<main class=\"site-main\">\n    <div class=\"main-introduce\">\n        <div class=\"img\">\n            <img src=\"https://res.cloudinary.com/dronicn8f/image/upload/v1607851733/header-background-min_v3psnp.jpg\" alt=\"\">\n        </div>\n        <div class=\"story\">\n            <h2>So...this is me<br>Just a golden retriever</h2>\n            <p>\n                Hi, guys! My name is Ryan and as you see I am a doggy. Recently found out that we the dogs have a types\n                and more specific - breeds. So my breed is a Golden Retriever. I have an amazing life. With my humans...\n                oh yeah that's right I have my own humans!\n                So as I was saying me and my humans love going out for a walks in the Sea garden. There are so many\n                awesome trees and lawns, but my favourite is the beach... ooooh I love the beach! When I hear the sound\n                of taking the shackles\n                down I start running wherever I see. And one day just when I was thinking that there is nothing to\n                surprise me about the beach my humans showed me the sea. But you can't walk in the sea you have to swim.\n                I didn't know what is like\n                to swimming but fortunately somehow I knew how to do it. So that's how swimming became my new favourite\n                exercise.\n                <br>\n                If you want to know each other better just log in or make a registration. It is so nice to meet new\n                people! </p>\n        </div>\n    </div>\n</main>","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MediaService {\n\n  constructor() { }\n\n  async uploadImage(imgFile: string) {\n    try {\n      const formData = new FormData();\n\n      formData.append(\"file\", imgFile);\n      formData.append(\"upload_preset\", \"jvmpdbhl\");\n\n      const { secure_url } = await fetch('https://api.cloudinary.com/v1_1/dronicn8f/image/upload', {\n        method: \"POST\",\n        body: formData\n      }).then(response => response.json());\n\n\n      return secure_url;\n    } catch {\n      console.log(\"There was an error!\");\n    }\n\n  }\n\n  deleteRecord(collection: string, recordId: number) {\n    return Backendless.Data.of(collection).remove({ objectId: `${recordId}` });\n  }\n\n  saveRecord(data: any) {\n    return Backendless.Data.of(\"posts\").save(data);\n  }\n\n  userRecords(userId: string, collection: string) {\n    const queryBuilder = Backendless.DataQueryBuilder.create().setWhereClause(`ownerId = '${userId}'`);\n\n    return Backendless.Data.of(collection).find(queryBuilder);\n  }\n\n  getAllRecords(collection: string) {\n    return Backendless.Data.of(collection).find();\n  }\n\n  getSingleRecord(objectId: string, collection: string) {\n    return Backendless.Data.of(collection).findById(objectId);\n  }\n}\n","<app-header></app-header>\n\n<div *ngIf=\"isLoaded\" class=\"admin-panel\">\n    <table *ngIf=\"articles.length !== 0\">\n        <thead>\n            <tr>\n                <th>UserId</th>\n                <th>Article Name</th>\n                <th>Action</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr *ngFor=\"let a of articles\">\n                <td>\n                    {{a.ownerId}}\n                </td>\n                <td>{{a.title}}</td>\n                <td>\n                    <a class=\"buttons\" routerLink=\"/edit/{{a.objectId}}\">Edit</a>\n                    <a class=\"buttons\" (click)=\"delete(a.objectId)\">Delete</a>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n    <h2 *ngIf=\"articles.length === 0\">There are no records</h2>\n</div>\n\n<div *ngIf=\"!isLoaded\" class=\"admin-panel\">\n    <h2>Loading...</h2>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { MediaRecord } from '../models/media-record';\nimport { MediaService } from '../services/media.service';\nimport { UserService } from '../services/user.service';\n\n@Component({\n  selector: 'app-admin-panel',\n  templateUrl: './admin-panel.component.html',\n  styleUrls: ['./admin-panel.component.css']\n})\nexport class AdminPanelComponent implements OnInit {\n  articles: any[] = [];\n  isLoaded: boolean = false;\n\n\n  constructor(private media: MediaService, private service: UserService) { }\n\n  async ngOnInit(): Promise<void> {\n    try {\n      this.articles = await this.media.getAllRecords('posts');\n      this.isLoaded = true;\n    } catch {\n      console.log(\"Error during loading!\");\n    }\n  }\n\n\n  async delete(f: number) {\n    try {\n      await this.media.deleteRecord('posts', f);\n      this.articles = await this.media.getAllRecords('posts');\n    } catch {\n      console.log(\"Error during deleting!\");\n    }\n  }\n}\n","import { Component } from '@angular/core';\n\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  \n}\n","<!-- <app-header></app-header> -->\n<div id=\"root\">\n\n<router-outlet>\n</router-outlet>\n<app-footer></app-footer>\n\n</div>\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Admin } from '../models/admin';\nimport { UserService } from '../services/user.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuard implements CanActivate {\n  user!: Admin;\n  constructor(private service: UserService) { }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n\n    return this.isAdmin();\n  }\n\n\n  async isAdmin() {\n    try {\n      this.user = Object.assign(await this.service.getUser());\n  \n      if (this.user && (this.user.role === \"admin\")) {\n        return true;\n      } else {\n        return false;\n      }\n    } catch {\n      console.log(\"Admin localisation error!\");\n      return false;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { UserService } from '../services/user.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private service: UserService, private router: Router) {}\n\n  canActivate(route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n      return this.isAuth();\n  }\n\n  async isAuth() {\n    let isAuth = await this.service.getUser();\n\n    if (!isAuth) {\n      this.router.navigate(['login']);\n    }\n\n    return isAuth ? true : false;\n  }\n  \n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AboutComponent } from './about/about.component';\nimport { HomepageComponent } from './homepage/homepage.component';\nimport { FooterComponent } from './core/footer/footer.component';\nimport { HeaderComponent } from './core/header/header.component';\nimport { CreateArticleComponent } from './create-article/create-article.component';\nimport { EditArticleComponent } from './edit-article/edit-article.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\nimport backendless from 'backendless';\nimport { environment } from 'src/environments/environment';\nimport { ArticleDetailsComponent } from './article-details/article-details.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { ArticleComponent } from './article/article.component';\nimport { AdminPanelComponent } from './admin-panel/admin-panel.component';\nimport { UserProfileComponent } from './user-profile/user-profile.component';\n\nbackendless.initApp(environment.backendless.APP_ID, environment.backendless.API_KEY);\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AboutComponent,\n    HomepageComponent,\n    FooterComponent,\n    HeaderComponent,\n    CreateArticleComponent,\n    EditArticleComponent,\n    LoginComponent,\n    RegisterComponent,\n    ArticleDetailsComponent,\n    ArticleComponent,\n    NotFoundComponent,\n    AdminPanelComponent,\n    UserProfileComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<app-header></app-header>\n<div class=\"create-article\">\n    <form #f=\"ngForm\" (ngSubmit)=\"createStory(f)\">\n        <fieldset>\n            <legend>Share your story</legend>\n            <div *ngIf=\"isInvalid\" class=\"error-message\">Please fill all required data!</div>\n            <p>\n                <label for=\"upld\">Upload image</label>\n                <br>\n                <input required ngModel name=\"imageFile\" (change)=\"registerPhoto($event)\" id=\"upld\" type=\"file\">\n            </p>\n            <p>\n                <label for=\"pic-direction\">Select picture orientation</label>\n                <br>\n                <select required ngModel name=\"orientation\" id=\"pic-direction\">\n                    <option>Landscape</option>\n                    <option>Portrait</option>\n                </select>\n            </p>\n            <p>\n                <input required ngModel type=\"text\" name=\"title\" placeholder=\"Your story title\">\n            </p>\n            <p>\n                <textarea maxlength=\"500\" required ngModel name=\"description\" cols=\"30\" rows=\"10\" placeholder=\"Tell us your story\"></textarea>\n            </p>\n            <p>\n                <button type=\"submit\" [disabled]=\"f.invalid\" class=\"btn-submit\">Share</button>\n            </p>\n        </fieldset>\n    </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MediaService } from '../services/media.service';\nimport { UserService } from '../services/user.service';\n\n@Component({\n  selector: 'app-create-article',\n  templateUrl: './create-article.component.html',\n  styleUrls: ['./create-article.component.css']\n})\nexport class CreateArticleComponent implements OnInit {\n  imgFile: string = '';\n  isInvalid: boolean = false;\n  record: any;\n\n  constructor(private service: UserService, private media: MediaService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  registerPhoto(event: any) {\n    this.imgFile = event.target.files[0];\n  }\n\n\n\n  async createStory(f: any) {\n    if (f.valid) {\n      try {\n        const imageData = await this.media.uploadImage(this.imgFile);\n        let { orientation, title, description } = f.value;\n\n\n        await this.media.saveRecord({\n          imageUrl: imageData,\n          orientation: orientation,\n          title: title,\n          description: description,\n          likesList: JSON.stringify([])\n        });\n\n        this.isInvalid = false;\n        this.router.navigate(['articles']);\n      } catch {\n        alert(\"Something went wrong with creating the story!\");\n        console.log(\"Something went wrong with creating the story!\");\n      }\n    } else {\n      this.isInvalid = true;\n    }\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-header></app-header>\n<div class=\"not-found\">\n    <img src=\"../../assets/images/pngfind.com-omg-png-1501765.png\" alt=\"page-not-found\">\n</div>","<app-header></app-header>\n<div *ngIf=\"!recordTest\" style=\"text-align: center;\">\n    <h1>Loading...</h1>\n</div>\n<div *ngIf=\"recordTest\" class=\"create-article\">\n    <form *ngIf=\"editFormGroup\" [formGroup]=\"editFormGroup\" (ngSubmit)=\"editStory()\">\n        <fieldset>\n            <legend>Share your story</legend>\n            <div *ngIf=\"isInvalid\" class=\"error-message\">Please fill all required data!</div>\n            <div>\n                <label for=\"upld\">Upload image</label>\n                <br>\n                <input name=\"imageFile\" (change)=\"registerPhoto($event)\" id=\"upld\" type=\"file\">\n            </div>\n            <div>\n                <label for=\"pic-direction\">Select picture orientation</label>\n                <br>\n                <select formControlName=\"orientation\" id=\"pic-direction\">\n                    <option>Landscape</option>\n                    <option>Portrait</option>\n                </select>\n            </div>\n            <div>\n                <input type=\"text\" formControlName=\"title\" placeholder=\"Your story title\">\n            </div>\n            <div>\n                <textarea formControlName=\"description\" cols=\"30\" rows=\"10\" placeholder=\"Tell us your story\"></textarea>\n            </div>\n            <div>\n                <button type=\"submit\" class=\"btn-submit\">Share</button>\n            </div>\n        </fieldset>\n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { SinglePost } from '../models/single-post';\nimport { MediaService } from '../services/media.service';\n\n@Component({\n  selector: 'app-edit-article',\n  templateUrl: './edit-article.component.html',\n  styleUrls: ['./edit-article.component.css']\n})\nexport class EditArticleComponent implements OnInit {\n  imgFile: string = '';\n  isInvalid: boolean = false;\n  recId: any;\n  recordTest!: SinglePost;\n  editFormGroup!: FormGroup;\n\n  constructor(private fb: FormBuilder, private route: ActivatedRoute, private media: MediaService, private router: Router) {\n  }\n\n\n  async ngOnInit(): Promise<void> {\n    try {\n      this.recId = this.route.snapshot.params.id;\n      this.recordTest = Object.assign(await this.media.getSingleRecord(`${this.recId}`, 'posts'));\n      this.editFormGroup = this.fb.group(this.recordTest);\n\n    } catch {\n      console.log(\"Problem getting record!\");\n    }\n  }\n\n  registerPhoto(event: any) {\n    this.imgFile = event.target.files[0];\n  }\n\n  createFormGroup() {\n    return new FormGroup({\n      description: new FormControl(),\n      imageUrl: new FormControl(),\n      objectId: new FormControl(),\n      orientation: new FormControl(),\n      title: new FormControl(),\n    });\n  }\n\n  async editStory() {\n    try {\n      let shallowCopy = Object.assign({}, this.editFormGroup.value);\n\n\n      if (this.imgFile) {\n        const imageData = await this.media.uploadImage(this.imgFile);\n\n        shallowCopy.imageUrl = imageData;\n      }\n\n      await this.media.saveRecord(shallowCopy);\n\n      this.router.navigate(['articles', this.recId]);\n    } catch {\n      console.log(\"Record updating error!\");\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor() { }\n\n  updateUserData(data: any) {\n    return Backendless.Data.of(\"Users\").save(data);\n  }\n\n  getUser() {\n    return Backendless.UserService.getCurrentUser()\n  }\n\n  logoutUser() {\n    localStorage.clear();\n    return Backendless.UserService.logout();\n  }\n\n  loginUser(email: string, password: string) {\n    return Backendless.UserService.login(email, password, true)\n      .then(x => {\n        localStorage.setItem('userId', `${x.objectId}`);\n        localStorage.setItem('email', `${x.email}`);\n        return x;\n      })\n      .catch((err: Error) => {\n        alert(err.message);\n        throw new Error(err.message);\n      });\n  }\n\n  registerUser(email: string, password: string) {\n    let user = new Backendless.User();\n    user.email = email;\n    user.password = password;\n\n    return Backendless.UserService.register(user);\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AboutComponent } from './about/about.component';\nimport { CreateArticleComponent } from './create-article/create-article.component';\nimport { EditArticleComponent } from './edit-article/edit-article.component';\nimport { AuthGuard } from './guards/auth.guard';\nimport { HomepageComponent } from './homepage/homepage.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { ArticleDetailsComponent } from './article-details/article-details.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { ArticleComponent } from './article/article.component';\nimport { AdminPanelComponent } from './admin-panel/admin-panel.component';\nimport { AdminGuard } from './guards/admin.guard';\nimport { UserProfileComponent } from './user-profile/user-profile.component';\n\nconst routes: Routes = [\n  { path: '', pathMatch: 'full', redirectTo: 'home' },\n  { path: 'home', component: HomepageComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n  { path: 'not-found', component: NotFoundComponent },\n  { path: 'user-profile', component: UserProfileComponent, canActivate: [AuthGuard] },\n  { path: 'about', component: AboutComponent, canActivate: [AuthGuard] },\n  { path: 'create', component: CreateArticleComponent, canActivate: [AuthGuard] },\n  { path: 'edit-article', component: EditArticleComponent, canActivate: [AuthGuard] },\n  { path: 'articles', component: ArticleComponent, canActivate: [AuthGuard] },\n  { path: 'articles/:id', component: ArticleDetailsComponent, canActivateChild: [AuthGuard] },\n  { path: 'edit/:id', component: EditArticleComponent, canActivate: [AuthGuard] },\n  { path: 'admin', component: AdminPanelComponent, canActivate: [AuthGuard, AdminGuard] },\n  { path: '**', redirectTo: 'not-found' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { throwError } from 'rxjs';\nimport { Admin } from '../models/admin';\nimport { UserService } from '../services/user.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  user!: Admin;\n  constructor(private service: UserService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  async login(f: NgForm) {\n    try {\n      let { email, password } = f.value;\n\n      if (email && password) {\n        this.user = Object.assign(await this.service.loginUser(email, password));\n\n        if (this.user.role === 'admin') {\n        this.router.navigate(['admin']);\n        } else {\n          this.router.navigate(['about']);\n        }\n      }\n    } catch {\n      f.resetForm();\n      console.log(\"Login failed!\");\n    }\n  }\n\n}\n","<app-header></app-header>\n<div class=\"login-container\">\n    <div class=\"site-login\">\n        <form #f=\"ngForm\" (ngSubmit)=\"login(f)\">\n            <fieldset>\n                <legend>Login</legend>\n                <p class=\"email\">\n                    <label for=\"email\">Email:</label>\n                    <br>\n                    <input ngModel required type=\"email\" id=\"email\" name=\"email\" placeholder=\"Example: ryan@abc.bg\">\n                </p>\n                <p class=\"password\">\n                    <label for=\"u-password\">Password:</label>\n                    <br>\n                    <input ngModel required type=\"password\" name=\"password\" id=\"u-password\">\n                </p>\n                <p class=\"submit\">\n                    <button [disabled]=\"f.invalid\" class=\"btn-submit\">Log In</button>\n                </p>\n            </fieldset>\n        </form>\n    </div>\n</div>\n","<app-header></app-header>\n<div *ngIf=\"!recData\" class=\"article-container\">\n    <h1>Loading...</h1>\n</div>\n<div *ngIf=\"recData\" class=\"article-container\">\n    <div class=\"article-media\">\n        <img class=\"{{recData.orientation}}\" src=\"{{recData.imageUrl}}\" alt=\"\">\n    </div>\n    <div class=\"buttons info-holder\">\n        <div *ngIf=\"isAuthor\" class=\"buttons\">\n            <a class=\"like-btn\" (click)=\"deleteRec(recId)\">Delete</a>\n            <a class=\"like-btn\" routerLink=\"/edit/{{recId}}\">Edit</a>\n        </div>\n\n        <div class=\"likes\" >\n            <h3>Likes: {{likes.length}}</h3>\n            <a class=\"like-btn\" *ngIf=\"!isAuthor && !isLiked\" (click)=\"likesUpdate()\"><i class=\"fas fa-thumbs-up\"></i> Like</a>\n            <a class=\"like-btn\" *ngIf=\"!isAuthor && isLiked\" (click)=\"disslikeUpdate()\"><i class=\"fas fa-thumbs-down\"></i> Dislike</a>\n        </div>\n    </div>\n    <div class=\"article-info\">\n        <h2>\n            {{recData.title}}\n        </h2>\n        <p>\n            {{recData.description}}\n        </p>\n    </div>\n    \n\n</div>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { SinglePost } from '../models/single-post';\nimport { MediaService } from '../services/media.service';\nimport { UserService } from '../services/user.service';\n\n\n@Component({\n  selector: 'app-article-details',\n  templateUrl: './article-details.component.html',\n  styleUrls: ['./article-details.component.css']\n})\n\nexport class ArticleDetailsComponent implements OnInit, OnDestroy {\n  recData!: SinglePost | any;\n  isAuthor: any;\n  userId: any;\n  recId: any;\n  isLiked: boolean = false;\n  likes: Array<any> = [];\n  postsEventHandler = Backendless.Data.of('posts').rt();\n\n\n  constructor(private service: UserService, private route: ActivatedRoute, private media: MediaService, private router: Router) { }\n\n  async ngOnInit(): Promise<void> {\n    try {\n      this.userId = localStorage.getItem('userId');\n      this.recId = this.route.snapshot.params.id;\n      this.recData = Object.assign(await this.media.getSingleRecord(this.recId, 'posts'));\n      this.isAuthor = this.userId === this.recData.ownerId;\n      this.likes = JSON.parse(this.recData.likesList);\n\n      if (this.likes.indexOf(this.userId) !== -1) {\n        this.isLiked = true;\n      }\n\n      this.postsEventHandler.addUpdateListener((updatedValue) => {\n        this.recData = Object.assign({}, updatedValue);\n        this.likes = JSON.parse(this.recData.likesList);\n\n        if (this.likes.indexOf(this.userId) !== -1) {\n          this.isLiked = true;\n        } else {\n          this.isLiked = false;\n        }\n      }, function error(e) {\n        console.log(e.message);\n      })\n\n    } catch {\n      this.router.navigate(['articles'])\n      console.log(\"Error occured!\");\n    }\n  }\n\n  ngOnDestroy() {\n    this.postsEventHandler.removeUpdateListener((x) => console.log('listener was destroyed'));\n  }\n\n\n  async deleteRec(value: any) {\n    try {\n      let isSure = window.confirm(\"Do you really want to delete this record?\");\n\n      if (isSure) {\n        await this.media.deleteRecord('posts', value);\n        this.router.navigate(['articles']);\n      }\n\n    } catch {\n      console.log(\"Record deleting error!\");\n    }\n  }\n\n  async likesUpdate() {\n    try {\n      let likesList = JSON.parse(this.recData.likesList);\n\n      if (likesList.indexOf(this.userId) === -1) {\n        likesList.push(this.userId);\n\n        this.recData.likesList = JSON.stringify(likesList);\n\n        await this.media.saveRecord(this.recData);\n      } else {\n        console.log(\"this post is already liked\")\n      }\n\n    } catch {\n      console.log(\"Saving record error!\");\n    }\n\n  }\n\n  async disslikeUpdate() {\n    try {\n      let likesList = JSON.parse(this.recData.likesList);\n      let elemIndex = likesList.indexOf(this.userId);\n\n      if (elemIndex !== -1) {\n        likesList.splice(elemIndex, 1);\n\n        this.recData.likesList = JSON.stringify(likesList);\n\n        await this.media.saveRecord(this.recData);\n      } else {\n        console.log(\"this post is already disliked\")\n      }\n\n    } catch {\n      console.log(\"Saving record error!\");\n    }\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}